name: Naver OAuth Bootstrap

on:
  workflow_dispatch: {}  # 수동 실행 버튼 생성

jobs:
  bootstrap:
    runs-on: ubuntu-latest
    permissions:
      contents: write      # token 저장을 위한 권한
      actions: write

    steps:
      - name: Install tools
        run: |
          sudo apt-get update -y
          sudo apt-get install -y jq gh

      - name: Show authorize URL
        id: show
        env:
          NAVER_CLIENT_ID: ${{ secrets.NAVER_CLIENT_ID }}
          REDIRECT_URI: https://webhook.site/${{ secrets.WEBHOOK_ID }}
        run: |
          STATE=$(head -c 18 /dev/urandom | base64 | tr -dc 'A-Za-z0-9' | head -c 24)
          ENCODED_REDIRECT=$(python3 -c "import urllib.parse,os; print(urllib.parse.quote(os.environ['REDIRECT_URI'], safe=''))")
          echo "STATE=$STATE" >> $GITHUB_ENV
          AUTH_URL="https://nid.naver.com/oauth2.0/authorize?response_type=code&client_id=${NAVER_CLIENT_ID}&redirect_uri=${ENCODED_REDIRECT}&state=${STATE}"
          echo "Authorize URL: $AUTH_URL"
          echo "auth-url=$AUTH_URL" >> $GITHUB_OUTPUT

      - name: Wait for user to authorize (max 5 min)
        id: wait
        env:
          WEBHOOK_TOKEN: ${{ secrets.WEBHOOK_TOKEN }}
          STATE: ${{ env.STATE }}
        run: |
          echo "[1/3] 위 Authorize URL 클릭 → 네이버 로그인/동의하세요."
          echo "로그인 후 webhook.site 페이지가 뜨면 바로 닫아도 됩니다."
          echo ""
          echo "👉 최대 5분 동안 code 수신 대기 중..."

          for i in {1..100}; do
            RESP=$(curl -sS "https://webhook.site/token/${WEBHOOK_TOKEN}/requests?page=1")
            CODE=$(echo "$RESP" | jq -r '.data[0].url' | sed 's/.*code=\([^&]*\).*/\1/')
            STATE_CHECK=$(echo "$RESP" | jq -r '.data[0].url' | sed 's/.*state=\([^&]*\).*/\1/')
            if [ "$CODE" != "" ] && [ "$STATE_CHECK" = "$STATE" ]; then
              echo "code=$CODE" >> $GITHUB_OUTPUT
              exit 0
            fi
            sleep 3
          done

          echo "❌ ERROR: code를 5분 안에 받지 못했습니다."
          exit 1

      - name: Exchange code for tokens
        id: token
        env:
          CODE: ${{ steps.wait.outputs.code }}
          NAVER_CLIENT_ID: ${{ secrets.NAVER_CLIENT_ID }}
          NAVER_CLIENT_SECRET: ${{ secrets.NAVER_CLIENT_SECRET }}
          STATE: ${{ env.STATE }}
        run: |
          RESP=$(curl -sS -X POST "https://nid.naver.com/oauth2.0/token" \
            -H "Content-Type: application/x-www-form-urlencoded" \
            -d "grant_type=authorization_code" \
            -d "client_id=${NAVER_CLIENT_ID}" \
            -d "client_secret=${NAVER_CLIENT_SECRET}" \
            -d "code=${CODE}" \
            -d "state=${STATE}")
          echo "$RESP" | jq .
          echo "access=$(echo "$RESP" | jq -r .access_token)" >> $GITHUB_OUTPUT
          echo "refresh=$(echo "$RESP" | jq -r .refresh_token)" >> $GITHUB_OUTPUT

      - name: Save tokens to Secrets
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ACCESS: ${{ steps.token.outputs.access }}
          REFRESH: ${{ steps.token.outputs.refresh }}
        run: |
          gh secret set NAVER_ACCESS_TOKEN --body "$ACCESS"
          if [ "$REFRESH" != "null" ] && [ -n "$REFRESH" ]; then
            gh secret set NAVER_REFRESH_TOKEN --body "$REFRESH"
          fi
          echo "✅ NAVER_ACCESS_TOKEN / NAVER_REFRESH_TOKEN 저장 완료"
